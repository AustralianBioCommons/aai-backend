"""platform_model

Revision ID: 575a146957f2
Revises: 1546c07b9d78
Create Date: 2025-09-24 10:07:01.958231

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '575a146957f2'
down_revision: Union[str, None] = '1546c07b9d78'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # NOTE: alembic doesn't automatically add new enum values to existing types
    op.execute('ALTER TYPE "PlatformEnum" ADD VALUE \'SBP\'')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('platform',
    sa.Column('id', sa.Enum('GALAXY', 'BPA_DATA_PORTAL', 'SBP', name='PlatformEnum'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_platform')),
    sa.UniqueConstraint('id', name=op.f('uq_platform_id')),
    sa.UniqueConstraint('name', name=op.f('uq_platform_name'))
    )

    # Insert the platform records that might be referenced by existing platformmembership records
    op.execute("INSERT INTO platform (id, name) VALUES ('GALAXY', 'Galaxy Australia')")
    op.execute("INSERT INTO platform (id, name) VALUES ('BPA_DATA_PORTAL', 'Bioplatforms Australia Data Portal')")
    op.execute("INSERT INTO platform (id, name) VALUES ('SBP', 'Structural Biology Platform')")

    op.create_table('platformrolelink',
    sa.Column('platform_id', sa.Enum('GALAXY', 'BPA_DATA_PORTAL', 'SBP', name='PlatformEnum'), nullable=False),
    sa.Column('role_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['platform_id'], ['platform.id'], name=op.f('fk_platformrolelink_platform_id_platform')),
    sa.ForeignKeyConstraint(['role_id'], ['auth0role.id'], name=op.f('fk_platformrolelink_role_id_auth0role')),
    sa.PrimaryKeyConstraint('platform_id', 'role_id', name=op.f('pk_platformrolelink'))
    )
    # Create foreign key constraint for platformmembership.platform_id
    op.create_foreign_key(op.f('fk_platformmembership_platform_id_platform'), 'platformmembership', 'platform', ['platform_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_platformmembership_platform_id_platform'), 'platformmembership', type_='foreignkey')
    op.drop_table('platformrolelink')
    op.drop_table('platform')
    # ### end Alembic commands ###
